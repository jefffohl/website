/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/page"],{

/***/ "(app-pages-browser)/./animations/script.ts":
/*!******************************!*\
  !*** ./animations/script.ts ***!
  \******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildAndAnimateGrid: () => (/* binding */ buildAndAnimateGrid)\n/* harmony export */ });\n/**\n *  Art is a constant process of inventing ways to escape the restrictions of past inventions.\n */ // types\nvar GridType = /*#__PURE__*/ function(GridType) {\n    GridType[\"ROW\"] = \"row\";\n    GridType[\"COLUMN\"] = \"column\";\n    return GridType;\n}(GridType || {});\nvar CellDrawDirection = /*#__PURE__*/ function(CellDrawDirection) {\n    CellDrawDirection[\"UP\"] = \"up\";\n    CellDrawDirection[\"DOWN\"] = \"down\";\n    CellDrawDirection[\"LEFT\"] = \"left\";\n    CellDrawDirection[\"RIGHT\"] = \"right\";\n    return CellDrawDirection;\n}(CellDrawDirection || {});\n// constants\nconst SWEETNESS = 24;\nconst INTERVAL = 100;\nconst HUE_RANGE = 40;\nconst SATURATION_RANGE = 50;\nconst LIGHTNESS_RANGE = 50;\nclass GridAnimator {\n    /**\n     * Initializes the animation on the specified canvas\n     */ start() {\n        if (!this.canvas || !this.context) {\n            console.error('Canvas not available');\n            return;\n        }\n        this.animationRunning = true;\n        this.createGrid();\n    }\n    /**\n     * Stops animation and cleans up resources\n     */ stop() {\n        // Set flag first to stop any new animations from starting\n        this.animationRunning = false;\n        // Clear any timeouts\n        if (this.timeoutId !== null) {\n            window.clearTimeout(this.timeoutId);\n            this.timeoutId = null;\n        }\n        // Clean up data that might be holding references\n        this.flatGrid = [];\n        this.grid = null;\n    }\n    /**\n     * Clean up resources when component unmounts\n     */ destroy() {\n        // Stop the animation first\n        this.stop();\n        // Release references to DOM elements\n        if (this.canvas) {\n            // Clear the canvas to prevent memory leaks\n            if (this.context) {\n                this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n            }\n        }\n        this.canvas = null;\n        this.context = null;\n    }\n    /**\n     * Generates a random window of given range within given domain\n     * @param domain the maximum (assuming all domains start with 0)\n     * @param range the length of the window\n     */ generateClamp(domain, range) {\n        // generate random starting point, based on domain minus the range. e.g. with a domain of 0 to 360,\n        // and the range is 50, then we choose a starting number between 0 and 310.\n        // this is the beginning of the clamp.\n        const start = Math.floor(Math.random() * (domain - range));\n        return [\n            start,\n            start + range\n        ];\n    }\n    generateCircularClamp(domain, range) {\n        // because hue is a circular range - going from 0 to 360, we could have a clamp\n        // which starts at 300, and ends at 40. So, any number above 300 or below 40 would\n        // be a valid value in this range.\n        const start = Math.floor(Math.random() * domain);\n        let end = start + range;\n        if (end > domain) {\n            end = start + range - domain;\n        }\n        return [\n            start,\n            end\n        ];\n    }\n    getRandomHue() {\n        const min = this.hueClamp[0];\n        const max = this.hueClamp[1] < this.hueClamp[0] ? 360 + this.hueClamp[1] : this.hueClamp[1];\n        const value = Math.floor(Math.random() * (max - min) + min);\n        return value > 360 ? value - 360 : value;\n    }\n    getRandomClamped(min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min) + min);\n    }\n    randomColor() {\n        return \"hsl(\".concat(this.getRandomHue(), \" \").concat(this.getRandomClamped(this.saturationClamp[0], this.saturationClamp[1]), \"% \").concat(this.getRandomClamped(this.lightnessClamp[0], this.lightnessClamp[1]), \"%)\");\n    }\n    generatePalette() {\n        this.hueClamp = this.generateCircularClamp(360, HUE_RANGE);\n        this.saturationClamp = this.generateClamp(100, SATURATION_RANGE);\n        this.lightnessClamp = this.generateClamp(100, LIGHTNESS_RANGE);\n        this.backgroundColor = this.randomColor();\n    }\n    sum(partialSum, a) {\n        return partialSum + a;\n    }\n    /**\n     * Function for generating a random number, with an upper bound\n     * determined by a diminishing probability.\n     * @param sweetness This parameter determines how likely the random number is to be large.\n     * Lower numbers reduce the probability, larger numbers increase the probability.\n     */ getValue(sweet) {\n        let count = 0;\n        let coefficient = 1 / sweet;\n        let progress = false;\n        while(!progress){\n            if (Math.random() <= coefficient) {\n                progress = true;\n            }\n            count++;\n            coefficient = coefficient + 1 / sweet;\n        }\n        return count;\n    }\n    createSpread(count) {\n        const spread = [];\n        let remaining = 1;\n        // Create 4 random numbers between 0 and 1 and sort them\n        const randomPoints = [];\n        for(let i = 0; i < count - 1; i++){\n            randomPoints.push(Math.random());\n        }\n        randomPoints.sort((a, b)=>a - b);\n        // Use these random points to create 5 random chunks\n        let previousPoint = 0;\n        for (const point of randomPoints){\n            const chunkSize = point - previousPoint;\n            spread.push(chunkSize);\n            remaining -= chunkSize;\n            previousPoint = point;\n        }\n        spread.push(remaining) // Last chunk is whatever is remaining\n        ;\n        return spread;\n    }\n    setupCanvas(canvasId) {\n        var _this_canvas;\n        this.canvas = document.getElementById(canvasId);\n        if ((_this_canvas = this.canvas) === null || _this_canvas === void 0 ? void 0 : _this_canvas.getContext) {\n            var _this_context;\n            const dpr = window.devicePixelRatio;\n            const rect = this.canvas.getBoundingClientRect();\n            this.canvas.width = rect.width * dpr;\n            this.canvas.height = rect.height * dpr;\n            this.context = this.canvas.getContext('2d');\n            (_this_context = this.context) === null || _this_context === void 0 ? void 0 : _this_context.scale(dpr, dpr);\n            this.gridHeight = rect.height;\n            this.gridWidth = rect.width;\n        }\n    }\n    createGridScaffold() {\n        const columnLength = this.getValue(SWEETNESS);\n        const rowLength = this.getValue(SWEETNESS);\n        const gridScaffold = {\n            columns: this.createSpread(columnLength),\n            rows: this.createSpread(rowLength)\n        };\n        return gridScaffold;\n    }\n    chooseGridType() {\n        return Math.random() >= 0.5 ? \"row\" : \"column\";\n    }\n    generateRow(parentCell, columns) {\n        return columns.map((column, index)=>{\n            const width = parentCell.width * column;\n            const top = parentCell.top;\n            const left = columns.slice(0, index).reduce(this.sum, 0) * parentCell.width + parentCell.left;\n            return {\n                left,\n                top,\n                width,\n                depth: parentCell.depth + 1,\n                height: parentCell.height,\n                color: this.randomColor(),\n                children: [],\n                drawDirection: \"right\",\n                originalDimensions: {\n                    height: 0,\n                    width: 0\n                }\n            };\n        });\n    }\n    generateColumn(parentCell, rows) {\n        return rows.map((row, index)=>{\n            const height = parentCell.height * row;\n            const left = parentCell.left;\n            const top = rows.slice(0, index).reduce(this.sum, 0) * parentCell.height + parentCell.top;\n            return {\n                left,\n                top,\n                height,\n                depth: parentCell.depth + 1,\n                width: parentCell.width,\n                color: this.randomColor(),\n                children: [],\n                drawDirection: \"down\",\n                originalDimensions: {\n                    height: 0,\n                    width: 0\n                }\n            };\n        });\n    }\n    getLevel2Columns() {\n        if (!this.gridScaffold) return [];\n        // we add a little extra spiciness to the columns for fun:\n        const breakoutChance = 0.01 * SWEETNESS;\n        const skipCells = [];\n        const newColumns = [];\n        this.gridScaffold.columns.forEach((column, columnIndex)=>{\n            if (skipCells.includes(columnIndex)) {\n                return;\n            }\n            if (columnIndex + 1 === this.gridScaffold.columns.length) {\n                newColumns.push(column);\n                return;\n            }\n            // for each cell, determine if it will break out\n            // if it does break out, determine how many cells to break out\n            if (Math.random() < breakoutChance) {\n                const numberOfRemainingColumns = this.gridScaffold.columns.length - (columnIndex + 1);\n                // randomly select the number of columns we want to span to the right\n                const columnSpan = Math.ceil(Math.random() * numberOfRemainingColumns);\n                const newColumn = this.gridScaffold.columns.slice(columnIndex, columnIndex + columnSpan).reduce(this.sum, 0);\n                for(let c = 0; c < columnSpan - 1; c++){\n                    skipCells.push(c + columnIndex + 1);\n                }\n                newColumns.push(newColumn);\n            } else {\n                newColumns.push(column);\n            }\n        });\n        return newColumns;\n    }\n    generateChildren(parentCell) {\n        if (!this.gridScaffold) return [];\n        // Depth level 0 is the top level grid cell - there can be only one!\n        // Depth level 1 are the cells of that make up the top rows\n        // Depth level 2 are the cells that make up the columns\n        // Below level 2 children do not adhere to the grid scaffold\n        if (parentCell.depth === 0) {\n            return this.generateColumn(parentCell, this.gridScaffold.rows);\n        } else if (parentCell.depth === 1) {\n            return this.generateRow(parentCell, this.getLevel2Columns());\n        } else {\n            const gridType = this.chooseGridType();\n            const spread = this.createSpread(this.getValue(SWEETNESS));\n            return gridType === \"column\" ? this.generateColumn(parentCell, spread) : this.generateRow(parentCell, spread);\n        }\n    }\n    generateGrid(cell) {\n        this.flatGrid.push(cell);\n        if (cell.depth < 2) {\n            cell.children = this.generateChildren(cell);\n            cell.children.forEach((child)=>{\n                this.generateGrid(child);\n            });\n        } else if (cell.depth < 4) {\n            if (Math.random() < 0.0075 * SWEETNESS) {\n                cell.children = this.generateChildren(cell);\n                cell.children.forEach((child)=>{\n                    this.generateGrid(child);\n                });\n            }\n        }\n    }\n    drawCell(index) {\n        return new Promise((resolve, reject)=>{\n            if (!this.context || !this.animationRunning) {\n                return reject(false);\n            }\n            if (this.flatGrid[index].children.length > 0) {\n                return resolve(true);\n            }\n            const cell = this.flatGrid[index];\n            this.context.fillStyle = cell.color;\n            let startTimestamp;\n            let limitValue;\n            let animationFrameId;\n            switch(cell.drawDirection){\n                case \"down\":\n                case \"up\":\n                    limitValue = cell.height - cell.originalDimensions.height;\n                    break;\n                case \"right\":\n                case \"left\":\n                    limitValue = cell.width - cell.originalDimensions.width;\n                    break;\n                default:\n                    limitValue = 0;\n            }\n            const incrementCell = (increment)=>{\n                // if the drawDirection is:\n                // RIGHT: we incrementally increase the width\n                // LEFT: we incrementally increase the width value and decrement the left.\n                // UP: we incrementally increase the height and decrement the top value.\n                // DOWN: we incrementally increase the height\n                switch(cell.drawDirection){\n                    case \"down\":\n                        return {\n                            top: cell.top,\n                            left: cell.left,\n                            height: increment,\n                            width: cell.width\n                        };\n                    case \"up\":\n                        return {\n                            top: cell.top + cell.height - cell.originalDimensions.height - increment,\n                            left: cell.left,\n                            height: cell.originalDimensions.height + increment,\n                            width: cell.width\n                        };\n                    case \"left\":\n                        return {\n                            top: cell.top,\n                            left: cell.left + cell.width - cell.originalDimensions.width - increment,\n                            height: cell.height,\n                            width: cell.originalDimensions.width + increment\n                        };\n                    case \"right\":\n                        return {\n                            top: cell.top,\n                            left: cell.left,\n                            height: cell.height,\n                            width: increment\n                        };\n                    default:\n                        return {\n                            top: 0,\n                            left: 0,\n                            height: 0,\n                            width: 0\n                        };\n                }\n            };\n            const draw = (timeStamp)=>{\n                if (!this.context || !this.animationRunning) {\n                    cancelAnimationFrame(animationFrameId);\n                    reject(false);\n                    return;\n                }\n                if (!startTimestamp) {\n                    startTimestamp = timeStamp;\n                }\n                const elapsed = timeStamp - startTimestamp;\n                const relativeProgress = elapsed / INTERVAL;\n                const increment = limitValue * Math.min(relativeProgress, 1);\n                const newDimensions = incrementCell(increment);\n                this.context.fillRect(newDimensions.left, newDimensions.top, newDimensions.width, newDimensions.height);\n                if (elapsed >= INTERVAL) {\n                    resolve(true);\n                } else {\n                    animationFrameId = window.requestAnimationFrame(draw);\n                }\n            };\n            animationFrameId = window.requestAnimationFrame(draw);\n            // Cleanup function for the promise\n            return ()=>{\n                if (animationFrameId) {\n                    cancelAnimationFrame(animationFrameId);\n                }\n            };\n        });\n    }\n    drawLoaderCell(pause) {\n        if (!this.context || !this.animationRunning) return;\n        this.context.fillStyle = this.backgroundColor;\n        let startTimestamp;\n        const draw = (timeStamp)=>{\n            if (!this.context || !this.animationRunning) return;\n            if (!startTimestamp) {\n                startTimestamp = timeStamp;\n            }\n            const elapsed = timeStamp - startTimestamp;\n            const relativeProgress = elapsed / pause;\n            const increment = this.gridWidth * Math.min(relativeProgress, 1);\n            this.context.fillRect(0, 0, increment, 5);\n            if (elapsed >= pause) {\n                return;\n            } else {\n                window.requestAnimationFrame(draw);\n            }\n        };\n        window.requestAnimationFrame(draw);\n    }\n    degenerateChildren(cells) {\n        var _cells_;\n        // first, both combatants must have no children:\n        if (cells[0].children.length > 0) {\n            cells[0].children = this.degenerateChildren(cells[0].children);\n            return cells;\n        }\n        if (((_cells_ = cells[1]) === null || _cells_ === void 0 ? void 0 : _cells_.children.length) > 0) {\n            cells[1].children = this.degenerateChildren(cells[1].children);\n            return cells;\n        }\n        if (cells.length === 1 && cells[0].children.length === 0) {\n            return [];\n        }\n        const gridType = cells[0].top === cells[1].top ? \"row\" : \"column\";\n        const winner = Math.random();\n        const newCells = cells.filter((_cell, index)=>{\n            if (winner < 0.5 && index === 1) {\n                return false;\n            }\n            if (winner >= 0.5 && index === 0) {\n                return false;\n            }\n            return true;\n        }).map((cell)=>{\n            // if the cell index is the first, it is the winner\n            // was it the first or the second?\n            // if winner < 0.5 it was the first\n            // if winner >= 0.5 it was the second\n            const drawDirection = winner < 0.5 ? cell.drawDirection : gridType === \"column\" ? \"up\" : \"left\";\n            return {\n                ...cell,\n                color: cell.depth < 2 ? this.backgroundColor : cell.color,\n                drawDirection,\n                originalDimensions: {\n                    height: cell.height,\n                    width: cell.width\n                }\n            };\n        });\n        if (gridType === \"column\") {\n            newCells[0].height = cells[0].height + cells[1].height;\n            if (winner >= 0.5) {\n                newCells[0].top = cells[0].top;\n            }\n        }\n        if (gridType === \"row\") {\n            newCells[0].width = cells[0].width + cells[1].width;\n            if (winner >= 0.5) {\n                newCells[0].left = cells[0].left;\n            }\n        }\n        // push the winner\n        this.flatGrid.push(newCells[0]);\n        return newCells;\n    }\n    destroyGrid() {\n        var _gridCell_children;\n        if (!this.animationRunning) return;\n        const gridCell = this.flatGrid[0];\n        this.flatGrid = [];\n        while((gridCell === null || gridCell === void 0 ? void 0 : (_gridCell_children = gridCell.children) === null || _gridCell_children === void 0 ? void 0 : _gridCell_children.length) > 0){\n            gridCell.children = this.degenerateChildren(gridCell.children);\n        }\n        this.animateGrid();\n    }\n    createGrid() {\n        if (!this.context || !this.animationRunning) return;\n        this.context.fillStyle = this.backgroundColor;\n        this.context.fillRect(0, 0, this.gridWidth, this.gridHeight);\n        this.gridScaffold = this.createGridScaffold();\n        this.grid = {\n            height: this.gridHeight,\n            width: this.gridWidth,\n            top: 0,\n            left: 0,\n            children: [],\n            depth: 0,\n            color: this.backgroundColor,\n            drawDirection: \"right\",\n            originalDimensions: {\n                height: this.gridHeight,\n                width: this.gridWidth\n            }\n        };\n        this.flatGrid = [];\n        this.generateGrid(this.grid);\n        this.animateGrid();\n    }\n    checkGrid() {\n        const totalGridSize = this.gridWidth * this.gridHeight;\n        const totalCellSize = this.flatGrid.filter((cell)=>cell.children.length === 0).map((c)=>c.height * c.width).reduce(this.sum, 0);\n        console.warn(totalGridSize, totalCellSize);\n    }\n    async animateGrid() {\n        if (!this.animationRunning) return;\n        if (this.flatGrid[this.index]) {\n            try {\n                await this.drawCell(this.index);\n                this.index++;\n                if (this.index < this.flatGrid.length) {\n                    if (this.animationRunning) {\n                        // Use requestAnimationFrame to avoid stack overflow with deep recursion\n                        window.requestAnimationFrame(()=>this.animateGrid());\n                    }\n                } else {\n                    var _this_flatGrid_, _this_flatGrid_1;\n                    this.index = 0;\n                    // if the last cell in the flat grid is the same dimensions as the gridWidth and gridHeight, then we just finished\n                    // destroying the grid, and need to start a new grid\n                    if (Math.round((_this_flatGrid_ = this.flatGrid[this.flatGrid.length - 1]) === null || _this_flatGrid_ === void 0 ? void 0 : _this_flatGrid_.width) === this.gridWidth && Math.round((_this_flatGrid_1 = this.flatGrid[this.flatGrid.length - 1]) === null || _this_flatGrid_1 === void 0 ? void 0 : _this_flatGrid_1.height) === this.gridHeight) {\n                        this.createGrid();\n                    } else {\n                        this.generatePalette();\n                        this.timeoutId = window.setTimeout(()=>{\n                            if (this.animationRunning) {\n                                this.destroyGrid();\n                            }\n                        }, 3000);\n                    }\n                }\n            } catch (error) {\n                // If an error occurs (like when component is destroyed), just stop the animation\n                // without logging an error, as this is expected behavior when stopping\n                if (this.animationRunning) {\n                    console.error('Error animating grid:', error);\n                }\n            }\n        } else {\n            this.index++;\n            if (this.index < this.flatGrid.length && this.animationRunning) {\n                window.requestAnimationFrame(()=>this.animateGrid());\n            }\n        }\n    }\n    constructor(canvasId){\n        this.context = null;\n        this.grid = null;\n        this.flatGrid = [];\n        this.gridScaffold = null;\n        this.index = 0;\n        this.gridHeight = 0;\n        this.gridWidth = 0;\n        this.hueClamp = [\n            0,\n            0\n        ];\n        this.saturationClamp = [\n            0,\n            0\n        ];\n        this.lightnessClamp = [\n            0,\n            0\n        ];\n        this.backgroundColor = '';\n        this.canvas = null;\n        this.animationRunning = false;\n        this.timeoutId = null;\n        this.setupCanvas(canvasId);\n        this.generatePalette();\n    }\n}\nconst buildAndAnimateGrid = (canvasId)=>{\n    const animator = new GridAnimator(canvasId);\n    animator.start();\n    return animator;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./animations/script.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/page.tsx":
/*!**********************!*\
  !*** ./app/page.tsx ***!
  \**********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ GridCanvas)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _animations_script__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/animations/script */ \"(app-pages-browser)/./animations/script.ts\");\n/* harmony import */ var _components_AboutPanel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/components/AboutPanel */ \"(app-pages-browser)/./components/AboutPanel.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\nfunction GridCanvas() {\n    _s();\n    const [aboutHidden, setAboutHidden] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const toggleAboutPanel = ()=>{\n        setAboutHidden(!aboutHidden);\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"GridCanvas.useEffect\": ()=>{\n            const animator = (0,_animations_script__WEBPACK_IMPORTED_MODULE_2__.buildAndAnimateGrid)('grid-canvas');\n            return ({\n                \"GridCanvas.useEffect\": ()=>{\n                    animator.destroy();\n                }\n            })[\"GridCanvas.useEffect\"];\n        }\n    }[\"GridCanvas.useEffect\"], []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"overflow-hidden absolute top-[60px] left-0 w-full h-[calc(100%-60px)] lg:h-full lg:top-0\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                onClick: toggleAboutPanel,\n                className: \"transition absolute top-4 right-4 w-[35px] h-[35px] rounded-full bg-[#22222244] hover:bg-[#22222299] z-5 flex items-center justify-center text-white text-xl cursor-pointer\",\n                children: aboutHidden ? '?' : 'X'\n            }, void 0, false, {\n                fileName: \"/Users/jefffohl/dev/website/frontend/app/page.tsx\",\n                lineNumber: 23,\n                columnNumber: 13\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_AboutPanel__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                isHidden: aboutHidden,\n                onClose: toggleAboutPanel\n            }, void 0, false, {\n                fileName: \"/Users/jefffohl/dev/website/frontend/app/page.tsx\",\n                lineNumber: 29,\n                columnNumber: 13\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n                id: \"grid-canvas\",\n                className: \"w-full h-full block\"\n            }, void 0, false, {\n                fileName: \"/Users/jefffohl/dev/website/frontend/app/page.tsx\",\n                lineNumber: 30,\n                columnNumber: 13\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/jefffohl/dev/website/frontend/app/page.tsx\",\n        lineNumber: 22,\n        columnNumber: 9\n    }, this);\n}\n_s(GridCanvas, \"e7Th+1UW0J49Eu1Fhr0in3GeQ4c=\");\n_c = GridCanvas;\nvar _c;\n$RefreshReg$(_c, \"GridCanvas\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9wYWdlLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUUyQztBQUNjO0FBQ1Q7QUFFakMsU0FBU0k7O0lBQ3BCLE1BQU0sQ0FBQ0MsYUFBYUMsZUFBZSxHQUFHTCwrQ0FBUUEsQ0FBQztJQUUvQyxNQUFNTSxtQkFBbUI7UUFDckJELGVBQWUsQ0FBQ0Q7SUFDcEI7SUFFQUwsZ0RBQVNBO2dDQUFDO1lBQ04sTUFBTVEsV0FBV04sdUVBQW1CQSxDQUFDO1lBQ3JDO3dDQUFPO29CQUNITSxTQUFTQyxPQUFPO2dCQUNwQjs7UUFDSjsrQkFBRyxFQUFFO0lBRUwscUJBQ0ksOERBQUNDO1FBQUlDLFdBQVU7OzBCQUNYLDhEQUFDRDtnQkFDR0UsU0FBU0w7Z0JBQ1RJLFdBQVU7MEJBRVROLGNBQWMsTUFBTTs7Ozs7OzBCQUV6Qiw4REFBQ0YsOERBQVVBO2dCQUFDVSxVQUFVUjtnQkFBYVMsU0FBU1A7Ozs7OzswQkFDNUMsOERBQUNRO2dCQUFPQyxJQUFHO2dCQUFjTCxXQUFVOzs7Ozs7Ozs7Ozs7QUFHL0M7R0ExQndCUDtLQUFBQSIsInNvdXJjZXMiOlsiL1VzZXJzL2plZmZmb2hsL2Rldi93ZWJzaXRlL2Zyb250ZW5kL2FwcC9wYWdlLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCdcblxuaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgYnVpbGRBbmRBbmltYXRlR3JpZCB9IGZyb20gJ0AvYW5pbWF0aW9ucy9zY3JpcHQnXG5pbXBvcnQgQWJvdXRQYW5lbCBmcm9tICdAL2NvbXBvbmVudHMvQWJvdXRQYW5lbCdcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gR3JpZENhbnZhcygpIHtcbiAgICBjb25zdCBbYWJvdXRIaWRkZW4sIHNldEFib3V0SGlkZGVuXSA9IHVzZVN0YXRlKHRydWUpXG5cbiAgICBjb25zdCB0b2dnbGVBYm91dFBhbmVsID0gKCkgPT4ge1xuICAgICAgICBzZXRBYm91dEhpZGRlbighYWJvdXRIaWRkZW4pXG4gICAgfVxuXG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgY29uc3QgYW5pbWF0b3IgPSBidWlsZEFuZEFuaW1hdGVHcmlkKCdncmlkLWNhbnZhcycpXG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICBhbmltYXRvci5kZXN0cm95KClcbiAgICAgICAgfVxuICAgIH0sIFtdKVxuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJvdmVyZmxvdy1oaWRkZW4gYWJzb2x1dGUgdG9wLVs2MHB4XSBsZWZ0LTAgdy1mdWxsIGgtW2NhbGMoMTAwJS02MHB4KV0gbGc6aC1mdWxsIGxnOnRvcC0wXCI+XG4gICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgb25DbGljaz17dG9nZ2xlQWJvdXRQYW5lbH1cbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJ0cmFuc2l0aW9uIGFic29sdXRlIHRvcC00IHJpZ2h0LTQgdy1bMzVweF0gaC1bMzVweF0gcm91bmRlZC1mdWxsIGJnLVsjMjIyMjIyNDRdIGhvdmVyOmJnLVsjMjIyMjIyOTldIHotNSBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciB0ZXh0LXdoaXRlIHRleHQteGwgY3Vyc29yLXBvaW50ZXJcIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIHthYm91dEhpZGRlbiA/ICc/JyA6ICdYJ31cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPEFib3V0UGFuZWwgaXNIaWRkZW49e2Fib3V0SGlkZGVufSBvbkNsb3NlPXt0b2dnbGVBYm91dFBhbmVsfSAvPlxuICAgICAgICAgICAgPGNhbnZhcyBpZD1cImdyaWQtY2FudmFzXCIgY2xhc3NOYW1lPVwidy1mdWxsIGgtZnVsbCBibG9ja1wiIC8+XG4gICAgICAgIDwvZGl2PlxuICAgIClcbn1cbiJdLCJuYW1lcyI6WyJ1c2VFZmZlY3QiLCJ1c2VTdGF0ZSIsImJ1aWxkQW5kQW5pbWF0ZUdyaWQiLCJBYm91dFBhbmVsIiwiR3JpZENhbnZhcyIsImFib3V0SGlkZGVuIiwic2V0QWJvdXRIaWRkZW4iLCJ0b2dnbGVBYm91dFBhbmVsIiwiYW5pbWF0b3IiLCJkZXN0cm95IiwiZGl2IiwiY2xhc3NOYW1lIiwib25DbGljayIsImlzSGlkZGVuIiwib25DbG9zZSIsImNhbnZhcyIsImlkIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/page.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/AboutPanel.tsx":
/*!***********************************!*\
  !*** ./components/AboutPanel.tsx ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ AboutPanel)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _SubPanel_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SubPanel.css */ \"(app-pages-browser)/./components/SubPanel.css\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\nfunction AboutPanel(param) {\n    let { isHidden } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"z-4 sub-panel right \".concat(isHidden ? 'outta-sight' : ''),\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                children: \"What is this all about? \"\n            }, void 0, false, {\n                fileName: \"/Users/jefffohl/dev/website/frontend/components/AboutPanel.tsx\",\n                lineNumber: 13,\n                columnNumber: 13\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"panel-content\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: [\n                            \"What you see happening on this page started out as a doodle, initially inspired by abstract works by artists such as\",\n                            ' ',\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                href: \"https://diebenkorn.org/collections/6673/objects/\",\n                                target: \"_blank\",\n                                children: \"Richard Diebenkorn\"\n                            }, void 0, false, {\n                                fileName: \"/Users/jefffohl/dev/website/frontend/components/AboutPanel.tsx\",\n                                lineNumber: 18,\n                                columnNumber: 21\n                            }, this),\n                            \". The doodle evolved over time into a kind of grid, dancing in my mind between the abstract and the concrete.\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/jefffohl/dev/website/frontend/components/AboutPanel.tsx\",\n                        lineNumber: 15,\n                        columnNumber: 17\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: [\n                            \"I became curious if I could write an algorithm to generate variants on the design. Something perhaps similar to\",\n                            ' ',\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                href: \"https://mathworld.wolfram.com/Rule110.html\",\n                                target: \"_blank\",\n                                children: \"cellular automata\"\n                            }, void 0, false, {\n                                fileName: \"/Users/jefffohl/dev/website/frontend/components/AboutPanel.tsx\",\n                                lineNumber: 30,\n                                columnNumber: 21\n                            }, this),\n                            \", but turned on its head. Instead of writing an algorithm to see what it would produce, I started with an idea of what I wanted the end product to look like, and crafted my algorithm to produce something akin to that. That idea evolved in to what you see creating and destroying itself here. With some relatively simple rules for generating the design, and then deconstructing it, the system will endlessly explore these ideas of abstraction.\",\n                            ' ',\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                href: \"https://github.com/jefffohl/website\",\n                                target: \"_blank\",\n                                children: \"You can see the code here.\"\n                            }, void 0, false, {\n                                fileName: \"/Users/jefffohl/dev/website/frontend/components/AboutPanel.tsx\",\n                                lineNumber: 44,\n                                columnNumber: 21\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/jefffohl/dev/website/frontend/components/AboutPanel.tsx\",\n                        lineNumber: 27,\n                        columnNumber: 17\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: \"What I find fascinating here is how our minds will look at this random arrangement of rectangles and inevitably attempt to identify it, to classify it. Is it a landscape? An aerial view of farmland? A slice of metamorphic schist? What I find interesting is that what our minds do here seems to be similar to the behavior of neural nets. Does this mean that these algorithms are getting closer to the way our own minds process information and perceive the world? I don't really know. But it is an interesting question.\"\n                    }, void 0, false, {\n                        fileName: \"/Users/jefffohl/dev/website/frontend/components/AboutPanel.tsx\",\n                        lineNumber: 51,\n                        columnNumber: 17\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/jefffohl/dev/website/frontend/components/AboutPanel.tsx\",\n                lineNumber: 14,\n                columnNumber: 13\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/jefffohl/dev/website/frontend/components/AboutPanel.tsx\",\n        lineNumber: 12,\n        columnNumber: 9\n    }, this);\n}\n_c = AboutPanel;\nvar _c;\n$RefreshReg$(_c, \"AboutPanel\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvQWJvdXRQYW5lbC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUV1QjtBQU9SLFNBQVNBLFdBQVcsS0FBNkI7UUFBN0IsRUFBRUMsUUFBUSxFQUFtQixHQUE3QjtJQUMvQixxQkFDSSw4REFBQ0M7UUFBSUMsV0FBVyx1QkFBcUQsT0FBOUJGLFdBQVcsZ0JBQWdCOzswQkFDOUQsOERBQUNHOzBCQUFHOzs7Ozs7MEJBQ0osOERBQUNGO2dCQUFJQyxXQUFVOztrQ0FDWCw4REFBQ0U7OzRCQUFFOzRCQUV5RDswQ0FDeEQsOERBQUNDO2dDQUNHQyxNQUFLO2dDQUNMQyxRQUFPOzBDQUNWOzs7Ozs7NEJBRUc7Ozs7Ozs7a0NBSVIsOERBQUNIOzs0QkFBRTs0QkFFc0Q7MENBQ3JELDhEQUFDQztnQ0FDR0MsTUFBSztnQ0FDTEMsUUFBTzswQ0FDVjs7Ozs7OzRCQUVHOzRCQVEwQzswQ0FDOUMsOERBQUNGO2dDQUNHQyxNQUFLO2dDQUNMQyxRQUFPOzBDQUNWOzs7Ozs7Ozs7Ozs7a0NBSUwsOERBQUNIO2tDQUFFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFjbkI7S0F2RHdCTCIsInNvdXJjZXMiOlsiL1VzZXJzL2plZmZmb2hsL2Rldi93ZWJzaXRlL2Zyb250ZW5kL2NvbXBvbmVudHMvQWJvdXRQYW5lbC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnXG5cbmltcG9ydCAnLi9TdWJQYW5lbC5jc3MnXG5cbmludGVyZmFjZSBBYm91dFBhbmVsUHJvcHMge1xuICAgIGlzSGlkZGVuOiBib29sZWFuXG4gICAgb25DbG9zZT86ICgpID0+IHZvaWRcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQWJvdXRQYW5lbCh7IGlzSGlkZGVuIH06IEFib3V0UGFuZWxQcm9wcykge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtgei00IHN1Yi1wYW5lbCByaWdodCAke2lzSGlkZGVuID8gJ291dHRhLXNpZ2h0JyA6ICcnfWB9PlxuICAgICAgICAgICAgPGgyPldoYXQgaXMgdGhpcyBhbGwgYWJvdXQ/IDwvaDI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBhbmVsLWNvbnRlbnRcIj5cbiAgICAgICAgICAgICAgICA8cD5cbiAgICAgICAgICAgICAgICAgICAgV2hhdCB5b3Ugc2VlIGhhcHBlbmluZyBvbiB0aGlzIHBhZ2Ugc3RhcnRlZCBvdXQgYXMgYSBkb29kbGUsXG4gICAgICAgICAgICAgICAgICAgIGluaXRpYWxseSBpbnNwaXJlZCBieSBhYnN0cmFjdCB3b3JrcyBieSBhcnRpc3RzIHN1Y2ggYXN7JyAnfVxuICAgICAgICAgICAgICAgICAgICA8YVxuICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj1cImh0dHBzOi8vZGllYmVua29ybi5vcmcvY29sbGVjdGlvbnMvNjY3My9vYmplY3RzL1wiXG4gICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQ9XCJfYmxhbmtcIlxuICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICBSaWNoYXJkIERpZWJlbmtvcm5cbiAgICAgICAgICAgICAgICAgICAgPC9hPlxuICAgICAgICAgICAgICAgICAgICAuIFRoZSBkb29kbGUgZXZvbHZlZCBvdmVyIHRpbWUgaW50byBhIGtpbmQgb2YgZ3JpZCwgZGFuY2luZ1xuICAgICAgICAgICAgICAgICAgICBpbiBteSBtaW5kIGJldHdlZW4gdGhlIGFic3RyYWN0IGFuZCB0aGUgY29uY3JldGUuXG4gICAgICAgICAgICAgICAgPC9wPlxuICAgICAgICAgICAgICAgIDxwPlxuICAgICAgICAgICAgICAgICAgICBJIGJlY2FtZSBjdXJpb3VzIGlmIEkgY291bGQgd3JpdGUgYW4gYWxnb3JpdGhtIHRvIGdlbmVyYXRlXG4gICAgICAgICAgICAgICAgICAgIHZhcmlhbnRzIG9uIHRoZSBkZXNpZ24uIFNvbWV0aGluZyBwZXJoYXBzIHNpbWlsYXIgdG97JyAnfVxuICAgICAgICAgICAgICAgICAgICA8YVxuICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj1cImh0dHBzOi8vbWF0aHdvcmxkLndvbGZyYW0uY29tL1J1bGUxMTAuaHRtbFwiXG4gICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQ9XCJfYmxhbmtcIlxuICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICBjZWxsdWxhciBhdXRvbWF0YVxuICAgICAgICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICAgICAgICAgICwgYnV0IHR1cm5lZCBvbiBpdHMgaGVhZC4gSW5zdGVhZCBvZiB3cml0aW5nIGFuIGFsZ29yaXRobSB0b1xuICAgICAgICAgICAgICAgICAgICBzZWUgd2hhdCBpdCB3b3VsZCBwcm9kdWNlLCBJIHN0YXJ0ZWQgd2l0aCBhbiBpZGVhIG9mIHdoYXQgSVxuICAgICAgICAgICAgICAgICAgICB3YW50ZWQgdGhlIGVuZCBwcm9kdWN0IHRvIGxvb2sgbGlrZSwgYW5kIGNyYWZ0ZWQgbXlcbiAgICAgICAgICAgICAgICAgICAgYWxnb3JpdGhtIHRvIHByb2R1Y2Ugc29tZXRoaW5nIGFraW4gdG8gdGhhdC4gVGhhdCBpZGVhXG4gICAgICAgICAgICAgICAgICAgIGV2b2x2ZWQgaW4gdG8gd2hhdCB5b3Ugc2VlIGNyZWF0aW5nIGFuZCBkZXN0cm95aW5nIGl0c2VsZlxuICAgICAgICAgICAgICAgICAgICBoZXJlLiBXaXRoIHNvbWUgcmVsYXRpdmVseSBzaW1wbGUgcnVsZXMgZm9yIGdlbmVyYXRpbmcgdGhlXG4gICAgICAgICAgICAgICAgICAgIGRlc2lnbiwgYW5kIHRoZW4gZGVjb25zdHJ1Y3RpbmcgaXQsIHRoZSBzeXN0ZW0gd2lsbFxuICAgICAgICAgICAgICAgICAgICBlbmRsZXNzbHkgZXhwbG9yZSB0aGVzZSBpZGVhcyBvZiBhYnN0cmFjdGlvbi57JyAnfVxuICAgICAgICAgICAgICAgICAgICA8YVxuICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj1cImh0dHBzOi8vZ2l0aHViLmNvbS9qZWZmZm9obC93ZWJzaXRlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldD1cIl9ibGFua1wiXG4gICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgIFlvdSBjYW4gc2VlIHRoZSBjb2RlIGhlcmUuXG4gICAgICAgICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICAgICAgPHA+XG4gICAgICAgICAgICAgICAgICAgIFdoYXQgSSBmaW5kIGZhc2NpbmF0aW5nIGhlcmUgaXMgaG93IG91ciBtaW5kcyB3aWxsIGxvb2sgYXRcbiAgICAgICAgICAgICAgICAgICAgdGhpcyByYW5kb20gYXJyYW5nZW1lbnQgb2YgcmVjdGFuZ2xlcyBhbmQgaW5ldml0YWJseSBhdHRlbXB0XG4gICAgICAgICAgICAgICAgICAgIHRvIGlkZW50aWZ5IGl0LCB0byBjbGFzc2lmeSBpdC4gSXMgaXQgYSBsYW5kc2NhcGU/IEFuIGFlcmlhbFxuICAgICAgICAgICAgICAgICAgICB2aWV3IG9mIGZhcm1sYW5kPyBBIHNsaWNlIG9mIG1ldGFtb3JwaGljIHNjaGlzdD8gV2hhdCBJIGZpbmRcbiAgICAgICAgICAgICAgICAgICAgaW50ZXJlc3RpbmcgaXMgdGhhdCB3aGF0IG91ciBtaW5kcyBkbyBoZXJlIHNlZW1zIHRvIGJlXG4gICAgICAgICAgICAgICAgICAgIHNpbWlsYXIgdG8gdGhlIGJlaGF2aW9yIG9mIG5ldXJhbCBuZXRzLiBEb2VzIHRoaXMgbWVhbiB0aGF0XG4gICAgICAgICAgICAgICAgICAgIHRoZXNlIGFsZ29yaXRobXMgYXJlIGdldHRpbmcgY2xvc2VyIHRvIHRoZSB3YXkgb3VyIG93biBtaW5kc1xuICAgICAgICAgICAgICAgICAgICBwcm9jZXNzIGluZm9ybWF0aW9uIGFuZCBwZXJjZWl2ZSB0aGUgd29ybGQ/IEkgZG9uJmFwb3M7dFxuICAgICAgICAgICAgICAgICAgICByZWFsbHkga25vdy4gQnV0IGl0IGlzIGFuIGludGVyZXN0aW5nIHF1ZXN0aW9uLlxuICAgICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICApXG59XG4iXSwibmFtZXMiOlsiQWJvdXRQYW5lbCIsImlzSGlkZGVuIiwiZGl2IiwiY2xhc3NOYW1lIiwiaDIiLCJwIiwiYSIsImhyZWYiLCJ0YXJnZXQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/AboutPanel.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/SubPanel.css":
/*!*********************************!*\
  !*** ./components/SubPanel.css ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"6cc40dcd0565\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvU3ViUGFuZWwuY3NzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSxjQUFjO0FBQzdCLElBQUksSUFBVSxJQUFJLGlCQUFpQiIsInNvdXJjZXMiOlsiL1VzZXJzL2plZmZmb2hsL2Rldi93ZWJzaXRlL2Zyb250ZW5kL2NvbXBvbmVudHMvU3ViUGFuZWwuY3NzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiNmNjNDBkY2QwNTY1XCJcbmlmIChtb2R1bGUuaG90KSB7IG1vZHVsZS5ob3QuYWNjZXB0KCkgfVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/SubPanel.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fjefffohl%2Fdev%2Fwebsite%2Ffrontend%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!":
/*!********************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fjefffohl%2Fdev%2Fwebsite%2Ffrontend%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false! ***!
  \********************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/page.tsx */ \"(app-pages-browser)/./app/page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZqZWZmZm9obCUyRmRldiUyRndlYnNpdGUlMkZmcm9udGVuZCUyRmFwcCUyRnBhZ2UudHN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJnNlcnZlcj1mYWxzZSEiLCJtYXBwaW5ncyI6IkFBQUEsc0pBQXNGIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvamVmZmZvaGwvZGV2L3dlYnNpdGUvZnJvbnRlbmQvYXBwL3BhZ2UudHN4XCIpO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fjefffohl%2Fdev%2Fwebsite%2Ffrontend%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n true &&\n  (function () {\n    function getComponentNameFromType(type) {\n      if (null == type) return null;\n      if (\"function\" === typeof type)\n        return type.$$typeof === REACT_CLIENT_REFERENCE\n          ? null\n          : type.displayName || type.name || null;\n      if (\"string\" === typeof type) return type;\n      switch (type) {\n        case REACT_FRAGMENT_TYPE:\n          return \"Fragment\";\n        case REACT_PORTAL_TYPE:\n          return \"Portal\";\n        case REACT_PROFILER_TYPE:\n          return \"Profiler\";\n        case REACT_STRICT_MODE_TYPE:\n          return \"StrictMode\";\n        case REACT_SUSPENSE_TYPE:\n          return \"Suspense\";\n        case REACT_SUSPENSE_LIST_TYPE:\n          return \"SuspenseList\";\n      }\n      if (\"object\" === typeof type)\n        switch (\n          (\"number\" === typeof type.tag &&\n            console.error(\n              \"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"\n            ),\n          type.$$typeof)\n        ) {\n          case REACT_CONTEXT_TYPE:\n            return (type.displayName || \"Context\") + \".Provider\";\n          case REACT_CONSUMER_TYPE:\n            return (type._context.displayName || \"Context\") + \".Consumer\";\n          case REACT_FORWARD_REF_TYPE:\n            var innerType = type.render;\n            type = type.displayName;\n            type ||\n              ((type = innerType.displayName || innerType.name || \"\"),\n              (type = \"\" !== type ? \"ForwardRef(\" + type + \")\" : \"ForwardRef\"));\n            return type;\n          case REACT_MEMO_TYPE:\n            return (\n              (innerType = type.displayName || null),\n              null !== innerType\n                ? innerType\n                : getComponentNameFromType(type.type) || \"Memo\"\n            );\n          case REACT_LAZY_TYPE:\n            innerType = type._payload;\n            type = type._init;\n            try {\n              return getComponentNameFromType(type(innerType));\n            } catch (x) {}\n        }\n      return null;\n    }\n    function testStringCoercion(value) {\n      return \"\" + value;\n    }\n    function checkKeyStringCoercion(value) {\n      try {\n        testStringCoercion(value);\n        var JSCompiler_inline_result = !1;\n      } catch (e) {\n        JSCompiler_inline_result = !0;\n      }\n      if (JSCompiler_inline_result) {\n        JSCompiler_inline_result = console;\n        var JSCompiler_temp_const = JSCompiler_inline_result.error;\n        var JSCompiler_inline_result$jscomp$0 =\n          (\"function\" === typeof Symbol &&\n            Symbol.toStringTag &&\n            value[Symbol.toStringTag]) ||\n          value.constructor.name ||\n          \"Object\";\n        JSCompiler_temp_const.call(\n          JSCompiler_inline_result,\n          \"The provided key is an unsupported type %s. This value must be coerced to a string before using it here.\",\n          JSCompiler_inline_result$jscomp$0\n        );\n        return testStringCoercion(value);\n      }\n    }\n    function getTaskName(type) {\n      if (type === REACT_FRAGMENT_TYPE) return \"<>\";\n      if (\n        \"object\" === typeof type &&\n        null !== type &&\n        type.$$typeof === REACT_LAZY_TYPE\n      )\n        return \"<...>\";\n      try {\n        var name = getComponentNameFromType(type);\n        return name ? \"<\" + name + \">\" : \"<...>\";\n      } catch (x) {\n        return \"<...>\";\n      }\n    }\n    function getOwner() {\n      var dispatcher = ReactSharedInternals.A;\n      return null === dispatcher ? null : dispatcher.getOwner();\n    }\n    function hasValidKey(config) {\n      if (hasOwnProperty.call(config, \"key\")) {\n        var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n        if (getter && getter.isReactWarning) return !1;\n      }\n      return void 0 !== config.key;\n    }\n    function defineKeyPropWarningGetter(props, displayName) {\n      function warnAboutAccessingKey() {\n        specialPropKeyWarningShown ||\n          ((specialPropKeyWarningShown = !0),\n          console.error(\n            \"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)\",\n            displayName\n          ));\n      }\n      warnAboutAccessingKey.isReactWarning = !0;\n      Object.defineProperty(props, \"key\", {\n        get: warnAboutAccessingKey,\n        configurable: !0\n      });\n    }\n    function elementRefGetterWithDeprecationWarning() {\n      var componentName = getComponentNameFromType(this.type);\n      didWarnAboutElementRef[componentName] ||\n        ((didWarnAboutElementRef[componentName] = !0),\n        console.error(\n          \"Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release.\"\n        ));\n      componentName = this.props.ref;\n      return void 0 !== componentName ? componentName : null;\n    }\n    function ReactElement(\n      type,\n      key,\n      self,\n      source,\n      owner,\n      props,\n      debugStack,\n      debugTask\n    ) {\n      self = props.ref;\n      type = {\n        $$typeof: REACT_ELEMENT_TYPE,\n        type: type,\n        key: key,\n        props: props,\n        _owner: owner\n      };\n      null !== (void 0 !== self ? self : null)\n        ? Object.defineProperty(type, \"ref\", {\n            enumerable: !1,\n            get: elementRefGetterWithDeprecationWarning\n          })\n        : Object.defineProperty(type, \"ref\", { enumerable: !1, value: null });\n      type._store = {};\n      Object.defineProperty(type._store, \"validated\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: 0\n      });\n      Object.defineProperty(type, \"_debugInfo\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: null\n      });\n      Object.defineProperty(type, \"_debugStack\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: debugStack\n      });\n      Object.defineProperty(type, \"_debugTask\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: debugTask\n      });\n      Object.freeze && (Object.freeze(type.props), Object.freeze(type));\n      return type;\n    }\n    function jsxDEVImpl(\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      source,\n      self,\n      debugStack,\n      debugTask\n    ) {\n      var children = config.children;\n      if (void 0 !== children)\n        if (isStaticChildren)\n          if (isArrayImpl(children)) {\n            for (\n              isStaticChildren = 0;\n              isStaticChildren < children.length;\n              isStaticChildren++\n            )\n              validateChildKeys(children[isStaticChildren]);\n            Object.freeze && Object.freeze(children);\n          } else\n            console.error(\n              \"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\"\n            );\n        else validateChildKeys(children);\n      if (hasOwnProperty.call(config, \"key\")) {\n        children = getComponentNameFromType(type);\n        var keys = Object.keys(config).filter(function (k) {\n          return \"key\" !== k;\n        });\n        isStaticChildren =\n          0 < keys.length\n            ? \"{key: someKey, \" + keys.join(\": ..., \") + \": ...}\"\n            : \"{key: someKey}\";\n        didWarnAboutKeySpread[children + isStaticChildren] ||\n          ((keys =\n            0 < keys.length ? \"{\" + keys.join(\": ..., \") + \": ...}\" : \"{}\"),\n          console.error(\n            'A props object containing a \"key\" prop is being spread into JSX:\\n  let props = %s;\\n  <%s {...props} />\\nReact keys must be passed directly to JSX without using spread:\\n  let props = %s;\\n  <%s key={someKey} {...props} />',\n            isStaticChildren,\n            children,\n            keys,\n            children\n          ),\n          (didWarnAboutKeySpread[children + isStaticChildren] = !0));\n      }\n      children = null;\n      void 0 !== maybeKey &&\n        (checkKeyStringCoercion(maybeKey), (children = \"\" + maybeKey));\n      hasValidKey(config) &&\n        (checkKeyStringCoercion(config.key), (children = \"\" + config.key));\n      if (\"key\" in config) {\n        maybeKey = {};\n        for (var propName in config)\n          \"key\" !== propName && (maybeKey[propName] = config[propName]);\n      } else maybeKey = config;\n      children &&\n        defineKeyPropWarningGetter(\n          maybeKey,\n          \"function\" === typeof type\n            ? type.displayName || type.name || \"Unknown\"\n            : type\n        );\n      return ReactElement(\n        type,\n        children,\n        self,\n        source,\n        getOwner(),\n        maybeKey,\n        debugStack,\n        debugTask\n      );\n    }\n    function validateChildKeys(node) {\n      \"object\" === typeof node &&\n        null !== node &&\n        node.$$typeof === REACT_ELEMENT_TYPE &&\n        node._store &&\n        (node._store.validated = 1);\n    }\n    var React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"),\n      REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n      REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n      REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n      REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n      REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n    Symbol.for(\"react.provider\");\n    var REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n      REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n      REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n      REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n      REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\n      REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n      REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n      REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\"),\n      ReactSharedInternals =\n        React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n      hasOwnProperty = Object.prototype.hasOwnProperty,\n      isArrayImpl = Array.isArray,\n      createTask = console.createTask\n        ? console.createTask\n        : function () {\n            return null;\n          },\n      specialPropKeyWarningShown;\n    var didWarnAboutElementRef = {};\n    var didWarnAboutKeySpread = {};\n    exports.Fragment = REACT_FRAGMENT_TYPE;\n    exports.jsxDEV = function (\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      source,\n      self\n    ) {\n      return jsxDEVImpl(\n        type,\n        config,\n        maybeKey,\n        isStaticChildren,\n        source,\n        self,\n        Error(\"react-stack-top-frame\"),\n        createTask(getTaskName(type))\n      );\n    };\n  })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw4TEFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qZWZmZm9obC9kZXYvd2Vic2l0ZS9mcm9udGVuZC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["main-app"], () => (__webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fjefffohl%2Fdev%2Fwebsite%2Ffrontend%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);